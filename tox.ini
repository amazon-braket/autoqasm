[tox]
envlist = clean,linters,docs,unit-tests,notebooks


[testenv]
parallel_show_output = true
package = wheel
wheel_build_env = .pkg

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:unit-tests]
usedevelop=True
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
deps =
    {[test-deps]deps}
commands =
    pytest {posargs} --cov=autoqasm --cov-report term-missing --cov-report html --cov-report xml --cov-append
extras = test

[testenv:notebooks]
usedevelop=True
basepython = python3
deps =
    {[testenv:unit-tests]deps}
    notebook
    matplotlib
commands =
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/1_Getting_started_with_AutoQASM.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/2_Expressing_classical_control_flow.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/3_1_Iterative_phase_estimation.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/3_2_magic_state_distillation.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/4_Native_programming.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/5_Pulse_programming_and_dynamical_decoupling.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/6_Customize_gate_calibrations.ipynb
extras = test

[testenv:linters]
basepython = python3
# Remove this to check what versions are installed for the env. This stops running pip freeze.
list_dependencies_command = echo
deps =
    {[testenv:ruff-format]deps}
    {[testenv:ruff-check]deps}
commands =
    {[testenv:ruff-format]commands}
    {[testenv:ruff-check]commands}

# Read only linter env
[testenv:linters_check]
basepython = python3
deps = ruff
extras = linters
commands =
    {[testenv:ruff-check]commands}

[testenv:ruff-check]
basepython = python3
extras = linters
deps = ruff
commands =
    ruff check src {posargs}

[testenv:ruff-format]
basepython = python3
extras = linters
deps = ruff
commands =
    ruff format . {posargs}

[testenv:docs]
basepython = python3
deps =
    {[test-deps]deps}
    sphinx
    sphinx-rtd-theme
    sphinxcontrib-apidoc
commands =
    sphinx-build -E -T -b html doc build/documentation/html

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = build/documentation/html
commands =
    python -m http.server {posargs}

[testenv:zip-build]
basepython = python3
skip_install = true
commands =
    /bin/sh -c 'tar -czvf build_files.tar.gz build/'

[test-deps]
deps =
    # If you need to test on a certain branch, add @<branch-name> after .git
    git+https://github.com/amazon-braket/amazon-braket-sdk-python.git
    git+https://github.com/amazon-braket/amazon-braket-default-simulator-python.git
